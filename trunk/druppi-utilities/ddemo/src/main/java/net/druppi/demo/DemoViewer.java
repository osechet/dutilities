/*
 * DemoViewer.java
 *
 * Copyright (C) 2009 Olivier Sechet
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.druppi.demo;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;

import javax.swing.JEditorPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import javax.swing.text.Document;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.ViewFactory;

import net.druppi.swing.text.WrapColumnFactory;
import net.druppi.util.ResourceManager;

/**
 * This panel lists registered demos and displays the selected one.
 *
 * @author Olivier Sechet
 * @version 1.1 - Nov 26, 2009
 */
@SuppressWarnings("serial")
public class DemoViewer extends javax.swing.JPanel {

    /** The associated DemoManager. */
    private final DemoManager demoManager;

    /** The list listModel. */
    private final TableModel tableModel;

    /**
     * Creates new form DemoViewer.
     */
    public DemoViewer() {
        this.demoManager = DemoApplication.getApplication().getDemoManager();
        this.tableModel = new DemoTableModel();
        demoManager.setDemoList((DemoList) this.tableModel);
        initComponents();

        // Add a data listener to ensure one demo is always selected
        this.tableModel.addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(final TableModelEvent evt) {
                // The selection must be delayed to ensure all the GUI updates are
                // performed before.
                EventQueue.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        int index = demosTable.getSelectionModel().getMinSelectionIndex();
                        if (index < 0) {
                            demosTable.getSelectionModel().setSelectionInterval(0, 0);
                        }
                    }
                });
            }
        });
        this.demosTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(final ListSelectionEvent evt) {
                if (evt.getValueIsAdjusting()) {
                    return;
                }
                int index = demosTable.getSelectionModel().getMinSelectionIndex();
                Demo demo = (Demo) tableModel.getValueAt(index, 0);
                guiPanel.removeAll();
                guiPanel.add(demo.getPanel());
                guiPanel.revalidate();
                guiPanel.repaint();

                String source = demo.getSource();
                sourceEditorPane.setText(source);
                sourceEditorPane.setCaretPosition(0);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING:
     * Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("nls")
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new JSplitPane();
        demosScrollPane = new JScrollPane();
        demosTable = new JTable();
        tabbedPane = new JTabbedPane();
        guiPanel = new JPanel();
        sourcePanel = new JPanel();
        sourceScrollPane = new JScrollPane();
        sourceEditorPane = new JEditorPane();

        setName("Form"); // NOI18N
        setLayout(new BorderLayout());

        splitPane.setResizeWeight(0.1);
        splitPane.setName("splitPane"); // NOI18N

        demosScrollPane.setName("demosScrollPane"); // NOI18N

        demosTable.setModel(tableModel);
        demosTable.setName("demosTable"); // NOI18N
        demosTable.setTableHeader(null);
        demosTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        demosScrollPane.setViewportView(demosTable);

        demosTable.getAccessibleContext().setAccessibleName(ResourceManager.getResourceMap(getClass()).getString("DemoViewer.demosTable.AccessibleContext.accessibleName")); // NOI18N
        splitPane.setLeftComponent(demosScrollPane);

        tabbedPane.setName("tabbedPane"); // NOI18N
        tabbedPane.setPreferredSize(new Dimension(300, 200));

        guiPanel.setName("guiPanel"); // NOI18N

        guiPanel.setLayout(new BorderLayout());
        tabbedPane.addTab(ResourceManager.getResourceMap(getClass()).getString("DemoViewer.guiPanel.TabConstraints.tabTitle"), guiPanel); // NOI18N
        sourcePanel.setName("sourcePanel"); // NOI18N
        sourcePanel.setLayout(new BorderLayout());

        sourceScrollPane.setName("sourceScrollPane"); // NOI18N

        sourceEditorPane.setContentType(ResourceManager.getResourceMap(getClass()).getString("DemoViewer.sourceEditorPane.contentType")); // NOI18N
        sourceEditorPane.setEditable(false);
        sourceEditorPane.setEditorKit(new StyledEditorKit() {
            ViewFactory defaultFactory = new WrapColumnFactory();

            @Override
            public ViewFactory getViewFactory() {
                return defaultFactory;
            }

            @Override
            public Document createDefaultDocument() {
                return new SyntaxDocument();
            }
        });
        sourceEditorPane.setName("sourceEditorPane"); // NOI18N
        sourceScrollPane.setViewportView(sourceEditorPane);


        sourcePanel.add(sourceScrollPane, BorderLayout.CENTER);

        tabbedPane.addTab(ResourceManager.getResourceMap(getClass()).getString("DemoViewer.sourcePanel.TabConstraints.tabTitle"), sourcePanel); // NOI18N
        splitPane.setRightComponent(tabbedPane);

        add(splitPane, BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JScrollPane demosScrollPane;
    private JTable demosTable;
    private JPanel guiPanel;
    private JEditorPane sourceEditorPane;
    private JPanel sourcePanel;
    private JScrollPane sourceScrollPane;
    private JSplitPane splitPane;
    private JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

}
